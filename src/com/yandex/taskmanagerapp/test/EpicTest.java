package com.yandex.taskmanagerapp.test;

import com.yandex.taskmanagerapp.model.Epic;
import com.yandex.taskmanagerapp.model.Subtask;
import com.yandex.taskmanagerapp.service.Managers;
import com.yandex.taskmanagerapp.service.TaskManager;
import com.yandex.taskmanagerapp.service.Status;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class EpicTest {
    private final TaskManager tm = Managers.getDefault();

    @Test
    void epicCannotContainItselfInSubtasks() {
        Epic epic = new Epic("Epic", "non description");
        tm.createEpic(epic);
        Subtask sub1 = new Subtask("first_sub", "non desc", Status.NEW );
        Subtask sub2 = new Subtask("second_sub", "non desc", Status.NEW );
        ArrayList<Subtask> subtasks = new ArrayList<>();

        sub2.setId(epic.getId());
        sub1.setIdEpic(epic.getId());
        sub2.setIdEpic(epic.getId());
        tm.createSubtask(sub1);
        tm.createSubtask(sub2);
        subtasks.add(sub1);
        subtasks.add(sub2);
        epic.setSubtasks(subtasks);
        for (Subtask sub : epic.getSubtasks()) {
            assertNotEquals(epic.getId(), sub.getId(), "Epic не должен содержать сам себя");
        }
    }

    @Test
    void equalsToEachOtherIfEqualsId() {
        Epic epic1 = new Epic("first_epic", "non desc");
        Epic epic2 = new Epic("second_epic", "non desc");

        tm.createEpic(epic1);
        tm.createEpic(epic2);
        epic2.setId(1);
        assertEquals(epic1, epic2, "Эпики должны быть равны друг другу так как у них одинаковый id");
    }

    @Test
    void manualAndAutoGeneratedIdsDoNotConflict() {
        Epic epicAuto = new Epic("first_epic", "non desc");
        Epic epicManual = new Epic("second_epic", "non desc");
        tm.createEpic(epicManual);
        epicManual.setId(10);

        assertNotEquals(epicManual.getId(), epicAuto.getId(), "Сгенерированный id не должен совпадать с ручным");
    }

}