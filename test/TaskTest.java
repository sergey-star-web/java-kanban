package com.test;

import com.yandex.taskmanagerapp.model.Task;
import com.yandex.taskmanagerapp.service.Managers;
import com.yandex.taskmanagerapp.service.TaskManager;
import com.yandex.taskmanagerapp.enums.Status;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TaskTest {
    private final TaskManager tm = Managers.getMemoryTaskManager();

    @Test
    void equalsToEachOtherIfEqualsId() {
        Task task1 = new Task("first_task", "non desc", Status.NEW);
        Task task2 = new Task("second_task", "non desc", Status.NEW);

        tm.addTask(task1);
        tm.addTask(task2);
        task2.setId(1);
        assertEquals(task1, task2, "Таски должны быть равны друг другу так как у них одинаковый id");
    }

    @Test
    void manualAndAutoGeneratedIdsDoNotConflict() {
        Task taskAuto = new Task("first_task", "non desc", Status.NEW);
        Task taskManual = new Task("second_task", "non desc", Status.NEW);

        tm.addTask(taskManual);
        taskManual.setId(10);
        assertNotEquals(taskManual.getId(), taskAuto.getId(), "Сгенерированный id не должен совпадать с ручным");
    }

    @Test
    void checkImmutabilityAllFieldsTasks() {
        Task taskInit = new Task("first_task", "non desc", Status.NEW);
        boolean allFieldsTasksEquals = false;

        tm.addTask(taskInit);
        Task taskInManager = tm.getTask(taskInit.getId());
        if (taskInit.getId() == taskInManager.getId() && taskInit.getName().equals(taskInManager.getName())
                && taskInit.getDescription().equals(taskInManager.getDescription())
                && taskInit.getStatus() == taskInManager.getStatus()) {
            allFieldsTasksEquals = true;
        }
        assertTrue(allFieldsTasksEquals, "Поля не должны меняться при добавлении таска в менеджер");
    }
}
